declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)

define dso_local i32 @f_fib(i32 %a0) {
bb0:
    %v0 = alloca i32
    store i32 %a0, i32* %v0
    %v1 = load i32, i32* %v0
    %v2 = icmp eq i32 %v1, 1
    br i1 %v2, label %bb1, label %bb2

bb1:
    ret i32 1
    br label %bb2

bb2:
    %v3 = load i32, i32* %v0
    %v4 = icmp eq i32 %v3, 2
    br i1 %v4, label %bb3, label %bb4

bb3:
    ret i32 2
    br label %bb4

bb4:
    %v6 = load i32, i32* %v0
    %v7 = sub i32 %v6, 1
    %v5 = call i32 @f_fib(i32 %v7)
    %v9 = load i32, i32* %v0
    %v10 = sub i32 %v9, 2
    %v8 = call i32 @f_fib(i32 %v10)
    %v11 = add i32 %v5, %v8
    ret i32 %v11

}
define dso_local i32 @main() {
bb5:
    %v0 = alloca i32
    store i32 2, i32* %v0
    %v1 = alloca i32
    store i32 5, i32* %v1
    %v2 = call i32 @getint()
    store i32 %v2, i32* %v0
    %v3 = call i32 @getint()
    store i32 %v3, i32* %v1
    %v4 = alloca [2 x i32]
    store [2 x i32] [i32 1, i32 2], [2 x i32]* %v4
    %v5 = load i32, i32* %v0
    %v7 = load i32, i32* %v1
    %v6 = mul i32 %v5, %v7
    %v8 = sub i32 0, %v6
    %v10 = call i32 @f_fib(i32 4)
    %v9 = mul i32 %v8, %v10
    %v11 = add i32 %v9, 0
    %v12 = call i32 @f_fib(i32 1)
    %v13 = add i32 0, %v12
    %v14 = getelementptr [2 x i32], [2 x i32]* %v4, i32 0, i32 %v13
    %v15 = load i32, i32* %v14
    %v16 = mul i32 %v15, 1
    %v17 = add i32 %v11, %v16
    %v18 = sdiv i32 1, 2
    %v19 = sub i32 %v17, %v18
    %v20 = mul i32 %v19, 5
    store i32 %v20, i32* %v0
    %v22 = mul i32 7, 5923
    %v23 = sdiv i32 %v22, 56
    %v24 = mul i32 %v23, 56
    %v26 = call i32 @f_fib(i32 6)
    %v25 = call i32 @f_fib(i32 %v26)
    %v27 = sub i32 %v24, %v25
    %v28 = add i32 1, 2
    %v29 = sdiv i32 89, 2
    %v30 = mul i32 %v29, 36
    %v31 = sub i32 %v30, 53
    %v32 = sdiv i32 %v31, 1
    %v33 = mul i32 %v32, 6
    %v34 = sub i32 %v28, %v33
    %v36 = mul i32 45, 56
    %v37 = sdiv i32 %v36, 85
    %v38 = sub i32 %v37, 56
    %v39 = mul i32 35, 56
    %v40 = sdiv i32 %v39, 4
    %v41 = add i32 %v38, %v40
    %v42 = sub i32 %v41, 9
    %v35 = mul i32 2, %v42
    %v43 = sub i32 %v34, %v35
    %v44 = add i32 %v27, %v43
    store i32 %v44, i32* %v1
    %v47 = sub i32 0, 5
    %v46 = alloca i32
    store i32 %v47, i32* %v46
    %v48 = load i32, i32* %v0
    %v49 = load i32, i32* %v1
    %v50 = load i32, i32* %v46
    call void @putint(i32 %v48)
    call void @putch(i32 44)
    call void @putch(i32 32)
    call void @putint(i32 %v49)
    call void @putch(i32 44)
    call void @putch(i32 32)
    call void @putint(i32 %v50)
    call void @putch(i32 10)
    ret i32 0

}

